#!/bin/sh
#################################################################
#   )      (\_     # Wolfpack 13.0.0 Build Script               #
#  ((    _/{  "-;  # Created by: Wolfpack Development Team      #
#   )).-" {{ ;"`   # Revised by: Wolfpack Development Team      #
#  ( (  ;._ \\ ctr # Last Modification: check cvs logs          #
#################################################################

# seq replacement (not all distributions include seq)
#wp_seq()
#{
#	FIRST="$1";
#	LAST="$2";
#	while [ "$FIRST" -le "$LAST" ];
#	do
#		echo "$FIRST";
#		FIRST="$(expr $FIRST + 1)";
#	done;
#}

# aszlig: weird, i thought i used seq!?

ask_path()
{
	echo "not found." >&2;
	SUPPLIED_PATH="";
	while ! [ -d "$SUPPLIED_PATH" ];
	do
		echo -en "\nor just press enter to skip." >&2;
		echo -en "\e[A\rPlease enter the correct include directory: " >&2;
		read SUPPLIED_PATH;
		if [ ! "$SUPPLIED_PATH" ]; then
			break;
		fi
	done;

	echo "$SUPPLIED_PATH";
}

print_usage()
{
	cat <<-EOF
	Usage: ${0} [options]
	where options are:
	        --enable-mysql    Enable MySQL support.
	        --enable-debug    Enable debugging.
	        --static          Static linking.
	EOF
	exit 1;
}

while [ "$1" ];
do
	ITEM="$(echo "$1"|sed -e 's/^--\([^-]\+-\)\?//')";

	if [ "$ITEM" == "$1" ];
	then
		echo "Unknown option \"$1\"!";
		print_usage;
	elif [ "$1" == "--help" ];
	then
		print_usage;
	fi;

	YES_NO="$(echo "$1"|grep -q '^--\(enable-\|[^-]*$\)' && echo 'y' || echo 'n')"
	case "$ITEM" in
		debug)	DEBUG="$YES_NO";;
		mysql)	MYSQL="$YES_NO";;
		static)	STATIC="$YES_NO";;
		*)
			echo "Unknown option \"$1\"!";
			print_usage;
			;;
	esac;

	shift;
done;

if [ "$STATIC" = "y" ];
then
	QMAKE_LFLAGS="-static";
fi;

if [ "$DEBUG" = "y" ];
then
	echo "Debug: Yes";
	DEFINES="_DEBUG";
	QMAKE_CXXFLAGS="-g";
	CONFIG="warn_on";
fi;

if [ "$MYSQL" = "y" ];
then
	# <mysql>
	echo -n "Searching for MySQL includes... ";

	# backward compatibility for 3.xx.xx
	MYSQL_INC="$(mysql_config --cflags|sed -e "s/^\([^-]*-I\)*['\"]\?\([^ '\"$]*\).*$/\2/")";
	MYSQL_LIB="-L$(mysql_config --libs|sed -e "s/^\([^-]*-L\)*['\"]\?\([^ '\"$]*\).*$/\2/") -lmysqlclient";

	if ! [ "$MYSQL_INC" ];
	then
		ask_path;
		MYSQL_INC="$SUPPLIED_PATH";
		if [ ! "$MYSQL_INC" ]; then
			echo "MySQL support disabled ";
		fi
	else
		echo " ( $MYSQL_INC, $MYSQL_LIB )";
		DEFINES="$DEFINES MYSQL_DRIVER";
	fi;
	# </mysql>
fi;

# <python>
echo -n "Searching for Python includes... ";

for py_incpath in \
		/usr/include/[Pp]ython*/Python.h \
		/usr/local/include/[Pp]ython*/Python.h \
		;
do
	if [ -e "$py_incpath" ];
	then
		py_pathes="$py_pathes\n$py_incpath";
	fi;
done;

py_pathes="$(echo -e "$py_pathes")";

[ "$py_pathes" ] && PYTHON_INC="$(echo "$py_pathes"|sort -nr|head -1|sed -e 's/^\(\([^\/]*\/\)*\).*$/\1/;s/\/\+$//')";

if [ ! "$PYTHON_INC" ];
then
	PYTHON_INC="$(ask_path)";
else
	echo "( $PYTHON_INC )";
fi;

echo -n "Searching for Python library.... ";

for py_libpath in \
		/usr/lib/libpython*.so \
		/usr/lib/[Pp]ython*/libpython*.so \
		/usr/lib/[Pp]ython*/config/libpython*.so \
		/usr/local/lib/libpython*.so \
		;
do
	if [ -e "$py_libpath" ];
	then
		py_libs="$py_libs\n$py_libpath";
	fi;
done;

py_libs="$(echo -e "$py_libs")";

[ "$py_libs" ] && PYTHON_LIB="$(echo "$py_libs"|sort -nr|head -1|sed -e 's/^\(\([^\/]*\/\)*\).*$/\1/;s/\/\+$//')";

if [ ! "$PYTHON_LIB" ];
then
	PYTHON_LIB="$(ask_path)";
else
	echo "( $PYTHON_LIB )";
fi;
# </python>

PASSED_VARIABLES="";
for i in MYSQL_INC MYSQL_LIB PYTHON_INC PYTHON_LIB DEFINES QMAKE_CXXFLAGS QMAKE_LFLAGS CONFIG;
do
	PASSED_VARIABLES="$PASSED_VARIABLES $i+='$(eval "echo \$$i")'";
done;

echo -n "Creating Makefile using qmake... "

if [ -x "$QTDIR/bin/qmake" ];
then
	eval $QTDIR/bin/qmake -o Makefile $PASSED_VARIABLES wolfpack.pro > /dev/null 2>&1;
else
	eval qmake -o Makefile $PASSED_VARIABLES wolfpack.pro > /dev/null 2>&1;
fi;

echo "done.";

echo "Configure finished. Please run make now.";
